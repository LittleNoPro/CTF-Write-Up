from Crypto.Util.number import *
from sage.all import factor, crt

e = 0x10001
c = 2027792127378145444099302510462900300257442068928010403052259994880511317607407514908720534902489134379904618947792557805368190009359079320337075768626232418980864987406619809977532904702783433112202254001367719098893178820312980355187703995660867067442830169498602243151057835147454968516377852012013934653
cand_t1 = []

m1 = 2**1024 - 3
m2 = 2**1022 - 2
m3 = 2**1020 - 1
m4 = 2**1018

for k3 in range(0, (m3-1 - c)//m4 + 1):
    t3 = c + k3*m4
    for k2 in range(0, (m2-1 - t3)//m3 + 1):
        t2 = t3 + k2*m3
        for k1 in range(0, (m1-1 - t2)//m2 + 1):
            t1 = t2 + k1*m2
            cand_t1.append(t1)

fac = [13, 107, 87671, 3870037838243, 279462107025143615623321823017, 1325706410421371952032007611396267]

for t in cand_t1:
    msg = []
    for p in fac:
        d = pow(e, -1, p-1)
        m = pow(t, d, p)
        msg.append(m)

    m = crt(msg, fac)
    print(long_to_bytes(m))